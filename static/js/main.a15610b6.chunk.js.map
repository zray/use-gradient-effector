{"version":3,"sources":["../../node_modules/uuid/dist/esm-node/rng.js","../../node_modules/uuid/dist/esm-node/bytesToUuid.js","../../node_modules/uuid/dist/esm-node/v4.js","../../src/index.js","DomBoxes.jsx","index.jsx","styles.module.scss"],"names":["rng","randomBytes","byteToHex","i","toString","substr","v4","options","buf","offset","Array","rnds","random","ii","bth","join","bytesToUuid","RGBtoHSL","rgb","l","r","g","b","max","Math","min","delta","h","s","initialPosition","x","y","config","App","useState","dimensions","setDimensions","position","setPosition","gradientRef","useRef","shaderOutput","width","height","innerRadius","outerRadius","columns","rows","gradientValues","setGradientValues","canvasRef","useEffect","OffscreenCanvas","gradientEnd","offscreen","gradient","newGradientValues","sampleColumn","sampleRow","sampleX","sampleY","newGradientValue","hslValue","output","hue","saturation","lightness","key","uuid","useGradientEffector","DOMNode","current","offsetWidth","offsetHeight","className","styles","container","ref","onMouseMove","e","clientX","clientY","boxes","style","map","colorString","cn","box","hover","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.a15610b6.chunk.js","sourcesContent":["import crypto from 'crypto';\nexport default function rng() {\n  return crypto.randomBytes(16);\n}","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex; // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n\n  return [bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]]].join('');\n}\n\nexport default bytesToUuid;","import rng from './rng.js';\nimport bytesToUuid from './bytesToUuid.js';\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof options == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nexport default v4;","import { useRef, useEffect, useState } from \"react\";\nimport { v4 as uuid } from \"uuid\";\n\nconst RGBtoHSL = rgb => {\n  var r = rgb[0] / 255;\n  var g = rgb[1] / 255;\n  var b = rgb[2] / 255;\n  var max = Math.max(r, g, b);\n  var min = Math.min(r, g, b);\n  var delta = max - min;\n  var h = void 0;\n  var s = void 0;\n  var l = void 0;\n\n  if (max === min) {\n    h = 0;\n  } else if (r === max) {\n    h = (g - b) / delta;\n  } else if (g === max) {\n    h = 2 + (b - r) / delta;\n  } else if (b === max) {\n    h = 4 + (r - g) / delta;\n  }\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0) {\n    h += 360;\n  }\n\n  l = (min + max) / 2;\n\n  if (max === min) {\n    s = 0;\n  } else if (l <= 0.5) {\n    s = delta / (max + min);\n  } else {\n    s = delta / (2 - max - min);\n  }\n\n  return [h, s * 100, l * 100];\n};\n\nconst useGradientEffector = ({\n  dimensions: { width, height } = {},\n  position: { x, y } = {},\n  // falloff, TODO: add non-linear gradient ramp for radial gradient\n  innerRadius = 1,\n  outerRadius,\n  columns = 4,\n  rows = 3\n}) => {\n  const [gradientValues, setGradientValues] = useState();\n  const canvasRef = useRef(null);\n\n  // Draw canvas\n  useEffect(() => {\n    // If dimensions, then draw offscreen with matching width and height\n    if (width && height && !canvasRef.current) {\n      canvasRef.current = new OffscreenCanvas(width, height);\n    }\n\n    // If canvas exists, create gradient\n    if (canvasRef.current) {\n      // Draw gradient\n      const gradientEnd = outerRadius || height > width ? height : width;\n      const offscreen = canvasRef.current.getContext(\"2d\");\n      // Create gradient\n      const gradient = offscreen.createRadialGradient(\n        x,\n        y,\n        1,\n        x,\n        y,\n        gradientEnd\n      );\n\n      // Add color stops\n      gradient.addColorStop(0, \"#000\");\n      gradient.addColorStop(1, \"#fff\");\n\n      // Set the fill style and draw a rectangle\n      offscreen.fillStyle = gradient;\n      offscreen.fillRect(0, 0, width, height);\n    }\n  }, [width, height, innerRadius, outerRadius, x, y]);\n\n  // Get colour value\n  useEffect(() => {\n    // Empty array to hold values\n    const newGradientValues = [];\n\n    if (canvasRef.current) {\n      const offscreen = canvasRef.current.getContext(\"2d\");\n      // Loop through columns and rows to get computed value\n      for (let sampleColumn = 0; sampleColumn < columns; sampleColumn += 1) {\n        for (let sampleRow = 0; sampleRow < rows; sampleRow += 1) {\n          const sampleX = (width / columns) * sampleColumn;\n          const sampleY = (height / rows) * sampleRow;\n          const newGradientValue = offscreen.getImageData(\n            sampleX,\n            sampleY,\n            1,\n            1\n          );\n\n          // Convert to HSL\n          const hslValue = RGBtoHSL([\n            newGradientValue.data[0],\n            newGradientValue.data[1],\n            newGradientValue.data[2]\n          ]);\n\n          // Package output\n          const output = {\n            hue: hslValue[0],\n            saturation: hslValue[2],\n            lightness: hslValue[2],\n            key: uuid()\n          };\n\n          // Push into array\n          newGradientValues.push(output);\n        }\n      }\n    }\n\n    setGradientValues(newGradientValues);\n  }, [columns, rows, width, height, x, y]);\n\n  return gradientValues;\n};\n\nexport { useGradientEffector };\n","import React, { useRef, useState, useEffect } from \"react\";\nimport { useGradientEffector } from \"use-gradient-effector\";\nimport cn from \"classnames\";\n\n// Example styles\nimport styles from \"./styles.module.scss\";\n\n// Dummy position for initial state\nconst initialPosition = { x: 25, y: 25 };\nconst config = {\n  columns: 8,\n  rows: 6\n};\n\nconst App = () => {\n  const [dimensions, setDimensions] = useState();\n  const [position, setPosition] = useState(initialPosition);\n  const gradientRef = useRef(null);\n  const shaderOutput = useGradientEffector({\n    dimensions,\n    position,\n    columns: config.columns,\n    rows: config.rows\n  });\n\n  useEffect(() => {\n    const DOMNode = gradientRef.current;\n    const width = DOMNode.offsetWidth;\n    const height = DOMNode.offsetHeight;\n    setDimensions({ width, height });\n  }, [setDimensions]);\n\n  const mouseHandler = e => {\n    setPosition({\n      x: e.clientX,\n      y: e.clientY\n    });\n  };\n\n  return (\n    <div\n      className={styles.container}\n      ref={gradientRef}\n      onMouseMove={mouseHandler}\n    >\n      <div\n        className={styles.boxes}\n        style={{\n          \"--sample-columns\": config.columns,\n          \"--sample-rows\": config.rows\n        }}\n      >\n        {shaderOutput &&\n          shaderOutput.map(({ hue, lightness, key }) => {\n            const colorString = `hsl(${hue}, 0%, ${lightness}%)`;\n            return (\n              <div\n                className={cn(styles.box, styles.hover)}\n                style={{\n                  \"--sample-color\": colorString\n                }}\n                key={key}\n              />\n            );\n          })}\n      </div>\n    </div>\n  );\n};\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./DomBoxes\";\n// import App from \"./CanvasBoxes\";\n\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__332Lk\",\"boxes\":\"styles_boxes__106l5\",\"box\":\"styles_box__28i_Z\",\"hover\":\"styles_hover__2kYb7\",\"canvas\":\"styles_canvas__1aKYM\"};"],"sourceRoot":""}